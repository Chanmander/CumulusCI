name: Build Installable Executables

on:
    workflow_dispatch:
    push:
        branches:
            - main
            - feature/windows-standalone-build

jobs:
    windowsbuild:
        runs-on: "windows-2019"
        steps:
            - uses: actions/checkout@v2
              with:
                  fetch-depth: 0

            - name: Set up Cygwin
              uses: ./.github/actions/cygwin
              with:
                  platform: x64
                  packages: autoconf automake libtool wget zip zstd

            - name: Download and unpack pythonbuild repository
              shell: cmd
              run: |
                  wget https://github.com/indygreg/python-build-standalone/releases/download/20211017/cpython-3.9.7-x86_64-pc-windows-msvc-shared-install_only-20211017T1616.tar.gz
                  tar -zxvf cpython-3.9.7-x86_64-pc-windows-msvc-shared-install_only-20211017T1616.tar.gz

            - name: Rename Directory
              shell: pwsh
              run: move python cci_installer

            - name: Cleanup pythonbuild repository
              shell: cmd
              run: |
                  rmdir /s /q cci_installer\tcl
                  rmdir /s /q cci_installer\Lib\turtledemo
                  rmdir /s /q cci_installer\Lib\tkinter
                  rmdir /s /q cci_installer\Lib\test
                  rmdir /s /q cci_installer\Lib\idlelib
                  rmdir /s /q cci_installer\Lib\distutils\tests
                  del /s *.h

            - name: Ensure clean permissions
              shell: cmd
              run: yes | cacls cci_installer /t /g Everyone:f # fix the dll permissions

            - name: Copy installer script
              shell: cmd
              run: cp utility/venv_from_pip.py cci_installer/Scripts

            - name: Add static files
              shell: cmd
              run: |
                  echo "Run 'install.bat' to create a CumulusCI install environment" > cci_installer\README.txt
                  echo %%~dp0\python %%~dp0\Scripts\venv_from_pip.py > cci_installer\install.bat

            - name: Zip it # double-zipping preserves perms and accelerates actions
              shell: cmd
              run: zip -rm cci_installer_win.zip cci_installer

            - name: Upload executable
              uses: actions/upload-artifact@v2
              with:
                  name: cci_installer_win_build
                  if-no-files-found: error
                  path: cci_installer_win.zip

    windowstest:
        runs-on: "windows-2019"
        needs: windowsbuild
        strategy:
            fail-fast: True
        steps:
            - uses: actions/download-artifact@v2
              with:
                  name: cci_installer_win_build
                  path: cci_installer_win_build

            - name: See what's going on
              shell: cmd
              run: dir

            - name: Unzip
              shell: cmd
              run: unzip cci_installer_win_build/cci_installer_win.zip

            - name: See what's going on (2)
              shell: cmd
              run: dir cci_installer

            - name: See what's going on (3)
              shell: cmd
              run: dir cci_installer\install.bat

            - name: See what's going on (4)
              shell: cmd
              run: type cci_installer\install.bat

            - name: Install
              shell: cmd
              run: |
                  cci_installer\install.bat

            - name: Test installation
              shell: cmd
              run: |
                  cci

    macbuild:
        runs-on: macos-10.15
        steps:
            - uses: actions/checkout@v2
              with:
                  fetch-depth: 0

            - name: Download and unpack pythonbuild repository
              shell: sh # todo: make hard-coded inputs into inputs
              run: |
                  wget https://github.com/indygreg/python-build-standalone/releases/download/20211017/cpython-3.9.7-x86_64-apple-darwin-install_only-20211017T1616.tar.gz
                  tar -zxvf cpython-3.9.7-x86_64-apple-darwin-install_only-20211017T1616.tar.gz

            - name: Rename Directory
              shell: pwsh
              run: mv python cci_installer

            - name: Cleanup pythonbuild repository
              shell: sh
              run: |
                  rm -rf cci_installer/lib/tcl8*
                  rm -rf cci_installer/Lib/Tix*
                  rm -rf cci_installer/Lib/tk*
                  rm -rf cci_installer/include*
                  rm -rf cci_installer/lib/python3.*/idlelib
                  rm -rf cci_installer/lib/test
                  rm -rf cci_installer/lib/tkinter
                  rm -rf cci_installer/lib/turtledemo
                  rm -rf cci_installer/lib/distutils/tests
                  find cci_installer -name \*.h -exec rm -rf {} \;

            - name: Copy installer scripts
              shell: sh
              run: |
                  cp utility/venv_from_pip.py cci_installer/bin/
                  cp utility/install.sh cci_installer/
                  chmod u+x cci_installer/install.sh

            - name: Add static files
              shell: sh
              run: |
                  echo "Run 'install.sh' to create a CumulusCI install environment" > cci_installer/README.txt

            - name: Zip it # double-zipping is a weird effect of how upload-artifact works
              shell: sh
              run: zip -rm cci_installer_mac.zip cci_installer

            - name: Upload executable
              uses: actions/upload-artifact@v2
              with:
                  name: cci_installer_mac_build
                  if-no-files-found: error
                  path: cci_installer_mac.zip

    mactest:
        runs-on: macos-10.15
        needs: macbuild
        strategy:
            fail-fast: True
        steps:
            - uses: actions/download-artifact@v2
              with:
                  name: cci_installer_mac_build
                  path: cci_installer_mac_build

            - name: See what's going on
              shell: sh
              run: |
                  ls
                  ls cci_installer_mac_build

            - name: Unzip
              shell: sh
              run: unzip cci_installer_mac_build/cci_installer_mac.zip

            - name: See what's going on (2)
              shell: sh
              run: ls cci_installer

            - name: See what's going on (3)
              shell: sh
              run: ls cci_installer/bin

            - name: See what's going on (4)
              shell: sh
              run: cat cci_installer/install.sh

            - name: Install
              shell: sh
              run: |
                  cci_installer/install.sh

            - name: See what's going on (4)
              shell: sh
              run: ls ~/.local/bin || true

            - name: Test installation
              shell: sh
              run: |
                  cci
