name: Build Installable Executables

on:
    workflow_dispatch:
    push:
        branches:
            - main
            - feature/windows-standalone-build
            - feature/windows-standalone-build-3.10

jobs:
    windowsbuild:
        runs-on: "windows-2019"
        steps:
            - uses: actions/checkout@v2
              with:
                  fetch-depth: 0

            - name: Set up Cygwin
              uses: ./.github/actions/cygwin
              with:
                  platform: x64
                  packages: autoconf automake libtool wget zip zstd

            - name: Download and unpack pythonbuild repository
              shell: cmd
              run: |
                  wget https://github.com/indygreg/python-build-standalone/releases/download/20211017/cpython-3.10.0-x86_64-pc-windows-msvc-shared-install_only-20211017T1616.tar.gz
                  tar -zxvf cpython-3.10.0-x86_64-pc-windows-msvc-shared-install_only-20211017T1616.tar.gz

            - name: Rename Directory
              shell: pwsh
              run: |
                  mkdir cci_installer
                  move python cci_installer\python

            - name: Reformat more like a Mac structure
              shell: pwsh
              run: |
                  mkdir cci_installer\python\bin    
                  move cci_installer\python\*.exe cci_installer\python\bin\
                  move cci_installer\python\*.dll cci_installer\python\bin\
                  move cci_installer\python\*.pdb cci_installer\python\bin\

            - name: Cleanup pythonbuild repository
              shell: cmd
              run: |
                  rmdir /s /q cci_installer\python\tcl
                  rmdir /s /q cci_installer\python\Lib\turtledemo
                  rmdir /s /q cci_installer\python\Lib\tkinter
                  rmdir /s /q cci_installer\python\Lib\test
                  rmdir /s /q cci_installer\python\Lib\idlelib
                  rmdir /s /q cci_installer\python\Lib\distutils\tests
                  del /s *.h
                  del /s *.pdb
                  del /s *.lib

            - name: Ensure clean permissions
              shell: cmd
              run: yes | cacls cci_installer\python /t /g Everyone:f # fix the dll permissions

            - name: Copy installer script
              shell: cmd
              run: |
                  cp utility\install.bat cci_installer\install.bat
                  cp utility\venv_from_pip.py cci_installer\python
                  cp utility\ensure_dir_in_path.py cci_installer\python\bin\ensure_dir_in_path.py
                  chmod u+x cci_installer\install.bat
                  echo "Run 'install.bat' to create a CumulusCI install environment" > cci_installer\README.txt

            - name: Zip it # zipping preserves perms and accelerates actions
              shell: cmd
              run: zip -rm cci_installer_win.zip cci_installer

            - name: Upload executable
              uses: actions/upload-artifact@v2
              with:
                  name: cci_installer_win_build
                  if-no-files-found: error
                  path: cci_installer_win.zip

    windowstest:
        runs-on: "windows-2019" # at some point turn this into a matrix.
        needs: windowsbuild
        steps:
            - uses: actions/download-artifact@v2
              with:
                  name: cci_installer_win_build
                  path: cci_installer_win_build

            - name: See what's going on
              shell: cmd
              run: dir

            - name: Unzip
              shell: cmd
              run: unzip cci_installer_win_build/cci_installer_win.zip

            - name: See what's going on (2)
              shell: cmd
              run: dir cci_installer

            - name: See what's going on (3)
              shell: cmd
              run: dir cci_installer\install.bat

            - name: See what's going on (4)
              shell: cmd
              run: type cci_installer\install.bat

            - name: Install
              shell: cmd
              run: cci_installer\install.bat

            - name: See what's going on (5)
              shell: cmd
              run: dir %userprofile%\.cumulusci\cci_python_env\run\

            - name: Test installation
              shell: cmd
              run: |
                  %userprofile%\.cumulusci\cci_python_env\run\cci version

            - name: Test path setup
              shell: cmd
              run: |
                  %userprofile%\.cumulusci\cci_python_env\bin\python -m userpath verify %userprofile%\.cumulusci\cci_python_env\run\ || true
                  if %ERRORLEVEL% EQU 1 exit 3

    macbuild:
        runs-on: macos-10.15 # at some point turn this into a matrix.
        steps:
            - uses: actions/checkout@v2
              with:
                  fetch-depth: 0

            - name: Download and unpack pythonbuild repository
              shell: sh # todo: make hard-coded inputs into inputs
              run: |
                  wget https://github.com/indygreg/python-build-standalone/releases/download/20211017/cpython-3.10.0-x86_64-pc-windows-msvc-shared-install_only-20211017T1616.tar.gz
                  tar -zxvf cpython-3.10.0-x86_64-pc-windows-msvc-shared-install_only-20211017T1616.tar.gz

            - name: Rename Directory
              shell: sh
              run: |
                  mkdir cci_installer
                  mv python cci_installer/python

            - name: Cleanup pythonbuild repository
              shell: sh
              run: |
                  rm -rf cci_installer/python/Lib/Tix*
                  rm -rf cci_installer/python/Lib/tk*
                  rm -rf cci_installer/python/include*
                  rm -rf cci_installer/python/lib/python3.*/idlelib
                  rm -rf cci_installer/python/lib/tkinter
                  rm -rf cci_installer/python/lib/turtledemo
                  rm -rf cci_installer/python/lib/python3.*/pydoc
                  find cci_installer/python -name test -delete
                  find cci_installer/python -name test_ -delete
                  find cci_installer/python -name tests -delete
                  find cci_installer/python -name \*.a -delete
                  find cci_installer/python -name \*.h -delete
                  find cci_installer/python -name \*.exe -delete
                  find cci_installer/python -name tcl\* -delete

            - name: Copy installer scripts
              shell: sh
              run: |
                  cp utility/venv_from_pip.py cci_installer/python/bin/venv_from_pip.py
                  cp utility/ensure_dir_in_path.py cci_installer/python/bin/ensure_dir_in_path.py
                  cp utility/install.sh cci_installer/
                  chmod u+x cci_installer/install.sh

            - name: Add static files
              shell: sh
              run: |
                  echo "Run 'install.sh' to create a CumulusCI install environment" > cci_installer/README.txt

            - name: Zip it # double-zipping is a weird effect of how upload-artifact works
              shell: sh
              run: zip -rm cci_installer_mac.zip cci_installer

            - name: Upload executable
              uses: actions/upload-artifact@v2
              with:
                  name: cci_installer_mac_build
                  if-no-files-found: error
                  path: cci_installer_mac.zip

    mactest:
        runs-on: macos-10.15
        needs: macbuild
        steps:
            - uses: actions/download-artifact@v2
              with:
                  name: cci_installer_mac_build
                  path: cci_installer_mac_build

            - name: See what's going on
              shell: sh
              run: |
                  ls
                  ls cci_installer_mac_build

            - name: Unzip
              shell: sh
              run: unzip cci_installer_mac_build/cci_installer_mac.zip

            - name: See what's going on (2)
              shell: sh
              run: ls cci_installer

            - name: See what's going on (3)
              shell: sh
              run: ls cci_installer/python/bin

            - name: See what's going on (4)
              shell: sh
              run: cat cci_installer/install.sh

            - name: Install
              shell: sh
              run: cci_installer/install.sh

            - name: See what's going on (4)
              shell: sh
              run: ls ~/.cumulusci/cci_python_env/run/ || true

            - name: Test installation
              shell: sh
              run: ~/.cumulusci/cci_python_env/run/cci version

            - name: Test path setup
              shell: bash {0} # opt out of fail-fast
              run: |
                  ~/.cumulusci/cci_python_env/bin/python -m userpath verify ~/.cumulusci/cci_python_env/run/
                  rc=$?
                  if [ $rc -ne 2 ] && [ $rc -ne 0 ]
                  then
                    echo "userpath verify failed"
                    exit 42
                  fi
